[cfg_proto]
cfg_proto=proto/global.proto
cfg_proto_chunk=proto/global_chunk.proto

[exp]
cmd=
run_nn_script=run_nn
out_folder=exp/commonvoice/forward/commonvoice_GRU_4layer_mfcc_train_us_30000_forward_us_30000
seed=1234
use_cuda=True
multi_gpu=True
save_gpumem=False
N_epochs_tr=20

[dataset1]
data_name=valid_train_us_30000
fea:fea_name=mfcc
    fea_lst=/home/zhuhan/NasStore/kaldi-trunk/egs/commonvoice_modified/s5/data/valid_train_us_30000/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/home/zhuhan/NasStore/kaldi-trunk/egs/commonvoice_modified/s5/data/valid_train_us_30000/utt2spk  scp:/home/zhuhan/NasStore/kaldi-trunk/egs/commonvoice_modified/s5/data/valid_train_us_30000/cmvn.scp ark:- ark:- | add-deltas ark:- ark:- |
    cw_left=0
    cw_right=0
    
lab:lab_name=none
    lab_data_folder=/home/zhuhan/NasStore/kaldi-trunk/egs/commonvoice_modified/s5/data/valid_train_us_30000/
    lab_graph=/home/zhuhan/NasStore/kaldi-trunk/egs/commonvoice_modified/s5/exp/tri3b/graph

N_chunks=50

        
[data_use]
train_with=valid_train_us_30000
valid_with=valid_train_us_30000
forward_with=valid_train_us_30000


[batches]
batch_size_train=64
max_seq_length_train=500
increase_seq_length_train=False
start_seq_len_train=100
multply_factor_seq_len_train=2
batch_size_valid=16
max_seq_length_valid=1000

[architecture1]
arch_name = GRU_layers
arch_proto = proto/GRU.proto
arch_library = neural_networks
arch_class = GRU
arch_pretrain_file = /home/zhuhan/NasStore/pytorch-kaldi/exp/commonvoice/train/commonvoice_GRU_4layer_mfcc_train_us_30000_valid_us_1000_test_us_1000_australia_1000_england_1000_indian_1000_lr_4e-4_epoch_30/exp_files/final_architecture1.pkl
arch_freeze = False
arch_seq_model = True

gru_lay = 550,550,550,550
gru_drop = 0.2,0.2,0.2,0.2
gru_use_laynorm_inp = False
gru_use_batchnorm_inp = False
gru_use_laynorm = False,False,False,False
gru_use_batchnorm = True,True,True,True
gru_bidir = True
gru_act = tanh,tanh,tanh,tanh
gru_orthinit=True

arch_lr = 0.0004
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0

[architecture2]
arch_name=MLP_layers
arch_proto=proto/MLP.proto
arch_library=neural_networks
arch_class=MLP
arch_pretrain_file=/home/zhuhan/NasStore/pytorch-kaldi/exp/commonvoice/train/commonvoice_GRU_4layer_mfcc_train_us_30000_valid_us_1000_test_us_1000_australia_1000_england_1000_indian_1000_lr_4e-4_epoch_30/exp_files/final_architecture2.pkl
arch_freeze=False
arch_seq_model=False
dnn_lay=3280
dnn_drop=0.0
dnn_use_laynorm_inp=False
dnn_use_batchnorm_inp=False
dnn_use_batchnorm=False
dnn_use_laynorm=False
dnn_act=linear

arch_lr=0.0004
arch_halving_factor=0.5
arch_improvement_threshold=0.001
arch_opt=rmsprop
opt_momentum=0.0
opt_alpha=0.95
opt_eps=1e-8
opt_centered=False
opt_weight_decay=0.0


[model]
model_proto=proto/model.proto
model:out_dnn1=compute(GRU_layers,mfcc)
      out_dnn2=compute(MLP_layers,out_dnn1)
      loss_final=cost_nll(out_dnn2,none)
      err_final=cost_err(out_dnn2,none)


[forward]
forward_out=out_dnn2
normalize_posteriors=False
normalize_with_counts_from=none
save_out_file=True
require_decoding=False


[decoding]
decoding_script_folder=kaldi_decoding_scripts/
decoding_script=decode_dnn.sh
decoding_proto=proto/decoding.proto
min_active=200
max_active=7000
max_mem=50000000
beam=20.0
latbeam=12.0
acwt=0.10
max_arcs=-1
skip_scoring=false
scoring_script=/home/zhuhan/NasStore/kaldi-trunk/egs/wsj/s5/local/score.sh
scoring_opts="--min-lmwt 4 --max-lmwt 23"
norm_vars=False

